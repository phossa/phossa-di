<?php

namespace Phossa\Di\Definition\Loader;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-02-21 at 05:47:39.
 */
class LoadableTraitTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Loadable
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        include_once __DIR__ .'/Loadable.php';
        $this->object = new Loadable;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * Call protected/private method of a class.
     *
     * @param string $methodName Method name to call
     * @param array  $parameters Array of parameters to pass into method.
     *
     * @return mixed Method return.
     */
    protected function invokeMethod($methodName, array $parameters = [])
    {
        $reflection = new \ReflectionClass(get_class($this->object));
        $method = $reflection->getMethod($methodName);
        $method->setAccessible(true);

        return $method->invokeArgs($this->object, $parameters);
    }

    /**
     * normal case
     *
     * @covers Phossa\Di\Definition\Loader\LoadableTrait::checkFile
     */
    public function testCheckFile1()
    {
        $this->invokeMethod('checkFile', [ __DIR__ . '/def1.php']);
    }

    /**
     * missing file
     *
     * @covers Phossa\Di\Definition\Loader\LoadableTrait::checkFile
     * @expectedException Phossa\Di\Exception\NotFoundException
     * @expectedExceptionCode Phossa\Di\Message\Message::DEFINITION_NOT_FOUND
     */
    public function testCheckFile2()
    {
        $this->invokeMethod('checkFile', [ __DIR__ . '/def2.php']);
    }

    /**
     * normal case
     *
     * @covers Phossa\Di\Definition\Loader\LoadableTrait::getFileType
     */
    public function testGetFileType1()
    {
        $this->assertEquals(
            [ 'parameters', 'Phossa\\Di\\Definition\\Loader\\LoaderPhp'],
            $this->invokeMethod('getFileType', [ __DIR__ . '/def1.param.php'])
        );
    }

    /**
     * filename case
     *
     * @covers Phossa\Di\Definition\Loader\LoadableTrait::getFileType
     */
    public function testGetFileType2()
    {
        $this->assertEquals(
            [ 'parameters', 'Phossa\\Di\\Definition\\Loader\\LoaderPhp'],
            $this->invokeMethod('getFileType', [ __DIR__ . '/def.PA.php'])
        );
    }

    /**
     * unknown data type, convert to all
     *
     * @covers Phossa\Di\Definition\Loader\LoadableTrait::getFileType
     */
    public function testGetFileType3()
    {
        $this->assertEquals(
            [ false, 'Phossa\\Di\\Definition\\Loader\\LoaderPhp'],
            $this->invokeMethod('getFileType', [ __DIR__ . '/def1.php'])
        );
    }

    /**
     * unknown file suffix
     *
     * @covers Phossa\Di\Definition\Loader\LoadableTrait::getFileType
     * @expectedException Phossa\Di\Exception\LogicException
     * @expectedExceptionCode Phossa\Di\Message\Message::FILE_SUFFIX_UNKNOWN
     */
    public function testGetFileType4()
    {
        $this->assertEquals(
            [ false, 'Phossa\\Di\\Definition\\Loader\\LoaderPhp'],
            $this->invokeMethod('getFileType', [ __DIR__ . '/def6.md'])
        );
    }

    /**
     * load parameters
     *
     * @covers Phossa\Di\Definition\Loader\LoadableTrait::loadFile
     */
    public function testLoadFile1()
    {
        $this->assertEquals(
            ['parameters' => ['cache' => ['bingo']]],
            $this->invokeMethod('loadFile', [ __DIR__ . '/def1.param.php'])
        );
    }
}
